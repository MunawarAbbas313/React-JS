ðŸ“Œ How Data Flows from Parent to Child Using Props in React
In React, props (short for properties) allow data to be passed from a parent component to a child component. This enables component reusability and a unidirectional data flow.
ðŸ”¹ Example: Passing Data from Parent to Child Using Props
// ParentComponent.jsx
import React from "react";
import ChildComponent from "./ChildComponent";

function ParentComponent() {
  return (
    <div>
      <h1>Parent Component</h1>
      <ChildComponent name="John Doe" age={25} />
    </div>
  );
}

export default ParentComponent;


......................
// ChildComponent.jsx
import React from "react";

function ChildComponent(props) {
  return (
    <div>
      <h2>Child Component</h2>
      <p>Name: {props.name}</p>
      <p>Age: {props.age}</p>
    </div>
  );
}

export default ChildComponent;

âœ… Explanation:

ParentComponent passes name and age as props to ChildComponent.
ChildComponent receives props and displays the values.

ðŸ”¹ Output:
Parent Component
Child Component
Name: John Doe
Age: 25
ðŸ”¹ Advantages of Using Props
Reusable Components â†’ You can reuse components with different props.
Unidirectional Data Flow â†’ Data flows one way (Parent â†’ Child), making debugging easier.
Improves Component Modularity â†’ Encourages separation of concerns in UI development.
Read-Only Data â†’ Props cannot be modified inside child components, ensuring data consistency.
